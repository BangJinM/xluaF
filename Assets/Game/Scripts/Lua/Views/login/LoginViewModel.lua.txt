require("framework.System")

local Context = CS.Loxodon.Framework.Contexts.Context
local SimpleCommand = CS.Loxodon.Framework.Commands.SimpleCommand

local ObservableObject = require("framework.ObservableObject")
local ObservableDictionary = require("framework.ObservableDictionary")
local InteractionRequest = require("framework.InteractionRequest")
local Executors = require("framework.Executors")
local AsyncTask = require("framework.AsyncTask")

---
--模块
--@module LoginViewModel
local M=class("LoginViewModel",ObservableObject)

--[[--
构造函数
@param #table self
@param #table t 初始化参数
]]
function M:ctor(t)
	M.super.ctor(self,t)
	
	self.password = ""
	self.account = ""
	
	self.login = SimpleCommand(function() print("loginCommand") end,true)
	self.cancel = SimpleCommand(function() print("cancelCommand") end,true)
end
return M