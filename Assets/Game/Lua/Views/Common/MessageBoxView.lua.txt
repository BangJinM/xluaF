require("framework.System")
local MessageBoxModel = require("Views.Common.MessageBoxModel")

local M = class("MessageBoxView", target)

function M:onCreate(bundle)
    local context = self:BindingContext().DataContext
    if not context then
        context = MessageBoxModel()
        self:BindingContext().DataContext = context
    end

    local bindingSet = self:CreateBindingSet()

    bindingSet:Bind():For("onDismissRequest"):To("dismissRequest")

    bindingSet:Bind(self.title):For("text"):To("title"):TwoWay()
    bindingSet:Bind(self.content):For("text"):To("content"):TwoWay()
    bindingSet:Bind(self.ok):For("onClick"):To("okFunc")
    bindingSet:Bind(self.no):For("onClick"):To("noFunc")

    bindingSet:Build()

    if (context.btnType == MessageBoxModel.BTNTYPE.TYPE_ONE_BTN) then
        self.no.enabled = false
        self.ok.transfrom.position = CS.UnityEngine.Vector3()
    end
end

function M:onDismissRequest(sender, args)
    global.UIManager:UnloadWindow("Prefabs/MessageBox")
end

return M
